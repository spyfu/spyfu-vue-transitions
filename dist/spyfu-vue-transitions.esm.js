import bezierEasing from"bezier-easing";function onBeforeEnter(t){t.style.opacity=0,t.style.transition="opacity "+this.props.duration/2+"ms "+this.props.fadeInCurve,t.style.willChange="opacity"}function onLeave(t,e){t.parentElement.style.height=t.offsetHeight+"px",t.style.opacity=0,setTimeout(e,this.props.duration/2)}function onEnter(t,e){var n=this;t.parentElement.style.overflow="hidden",t.parentElement.style.transition="height "+this.props.duration+"ms "+this.props.heightCurve,t.parentElement.style.willChange="height",t.parentElement.style.height=t.offsetHeight+"px",setTimeout(function(){t.style.opacity=1,setTimeout(e,n.props.duration/2)},this.props.duration/2)}function onAfterEnter(t){t.removeAttribute("style")}function onTransitionEnd(t){t.target.classList.contains("v-collapse-transition")&&t.target.removeAttribute("style")}var auto_height={render:function(t,e){return t("div",{class:"v-auto-height-transition",on:{transitionend:onTransitionEnd}},[t("transition",{on:{afterEnter:onAfterEnter,beforeEnter:onBeforeEnter.bind(e),enter:onEnter.bind(e),leave:onLeave.bind(e)}},e.slots().default||t("div"))])},functional:!0,props:{duration:{default:350,type:Number},fadeOutCurve:{default:"ease-out",type:String},fadeInCurve:{default:"ease-in",type:String},heightCurve:{default:"ease-in-out",type:String},tag:{default:"div",type:String}}};function ease(t,e,n,i){void 0===i&&(i=null),i||(i=n/16.6666);for(var r=bezierEasing.apply(void 0,t),a=[],o=function(t){var o=t/i;a.push(setTimeout(function(){return e(r(o),t)},o*n))},u=0;u<=i;u+=1)o(u);return{cancel:function(){return a.forEach(clearTimeout)}}}var easeInOutQuart=[.77,0,.175,1];function count(t,e,n){var i=e-n;t.ease&&(t.ease.cancel(),t.ease=null),t.ease=ease(t.curve,function(e){t.display=n+i*e},t.duration)}var number={data:function(){return{currentAnimation:null,display:this.appear?0:this.value}},mounted:function(){var t=this;this.appear&&setTimeout(function(){return count(t,t.value,0)},this.delay)},render:function(){var t=Math.round(this.display);return this._c("span",[this._t("default",[this._v(this._s(t))],{value:this.display})],2)},methods:{cancel:function(){this.currentAnimation&&this.ease.cancel(),this.display=this.value}},props:{appear:{default:!1,type:Boolean},curve:{default:function(){return easeInOutQuart},type:Array},delay:{default:0,type:Number},duration:{default:3e3,type:Number},value:{required:!0,type:Number}},watch:{value:function(t,e){count(this,t,e)}}};export{auto_height as autoHeightTransition,number as numberTransition};
//# sourceMappingURL=spyfu-vue-transitions.esm.js.map
